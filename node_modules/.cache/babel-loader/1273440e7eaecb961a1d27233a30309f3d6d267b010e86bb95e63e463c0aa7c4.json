{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000a\\\\Documents\\\\Internship\\\\quiz-platform\\\\src\\\\components\\\\Scoreboard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scoreboard = ({\n  score,\n  totalQuestions,\n  onRetry\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Completed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"24px\",\n        fontWeight: \"bold\"\n      },\n      children: [\"Your Score: \", score, \" / \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"10px\",\n        margin: \"20px 0\"\n      },\n      children: Array.from({\n        length: totalQuestions\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30px\",\n          height: \"30px\",\n          borderRadius: \"50%\",\n          backgroundColor: index < score ? \"green\" : \"red\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"white\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\"\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"green\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u2714 Correct \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: \"10px\",\n          color: \"red\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u2716 Incorrect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRetry,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        cursor: \"pointer\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\"\n      },\n      children: \"Reattempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Scoreboard;\nexport default Scoreboard;\nvar _c;\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Scoreboard","score","totalQuestions","onRetry","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","display","justifyContent","gap","margin","Array","from","length","map","_","index","width","height","borderRadius","backgroundColor","alignItems","color","marginBottom","marginLeft","onClick","padding","cursor","border","_c","$RefreshReg$"],"sources":["C:/Users/2000a/Documents/Internship/quiz-platform/src/components/Scoreboard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Scoreboard = ({ score, totalQuestions, onRetry }) => {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h2>Quiz Completed!</h2>\r\n      <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\r\n        Your Score: {score} / {totalQuestions}\r\n      </p>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\", margin: \"20px 0\" }}>\r\n        {Array.from({ length: totalQuestions }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              width: \"30px\",\r\n              height: \"30px\",\r\n              borderRadius: \"50%\",\r\n              backgroundColor: index < score ? \"green\" : \"red\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"white\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {index + 1}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <span style={{ color: \"green\", fontWeight: \"bold\" }}>✔ Correct </span>\r\n        <span style={{ marginLeft: \"10px\", color: \"red\", fontWeight: \"bold\" }}>✖ Incorrect</span>\r\n      </div>\r\n      <button \r\n        onClick={onRetry} \r\n        style={{ padding: \"10px 20px\", fontSize: \"16px\", cursor: \"pointer\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\" }}\r\n      >\r\n        Reattempt Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}