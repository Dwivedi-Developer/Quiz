{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000a\\\\Documents\\\\Internship\\\\quiz-platform\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  selectedAnswer,\n  questionIndex,\n  onAnswer,\n  timeUp\n}) => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null); // Track correctness\n\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleOptionSelect = option => {\n    if (!submitted) {\n      setSelectedOption(option);\n    }\n  };\n  const handleSaveAnswer = () => {\n    console.log(\"handleSaveAnswer called at:\", new Date().toLocaleTimeString());\n    if (submitted) return; // Prevent multiple calls\n\n    if (!selectedOption && userInput === \"\") return;\n    const isAnswerCorrect = question.options ? selectedOption === question.correctAnswer : userInput === question.correctAnswer;\n    setIsCorrect(isAnswerCorrect);\n    setSubmitted(true);\n    setTimeout(() => {\n      onAnswer(question.options ? selectedOption : userInput);\n      setUserInput(\"\");\n      setSelectedOption(null);\n      setSubmitted(false);\n      setIsCorrect(null);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-lg p-6 max-w-xl mx-auto w-full mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), question.options ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: question.options.map((option, index) => {\n        let bgColor = \"bg-gray-100 hover:bg-gray-200 border border-gray-300\";\n        if (submitted && selectedOption === option) {\n          bgColor = isCorrect ? \"bg-green-500 text-white border-green-700\" : \"bg-red-500 text-white border-red-700\";\n        } else if (selectedOption === option) {\n          bgColor = \"bg-blue-100 border-blue-500 shadow-md\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `flex items-center p-3 rounded-lg shadow-sm transition cursor-pointer border-2 ${bgColor}`,\n          onClick: () => handleOptionSelect(option),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option-${index}`,\n            name: \"answer\",\n            value: option,\n            checked: selectedOption === option,\n            className: \"mr-3 w-5 h-5 hidden\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            className: \"text-gray-700 font-medium cursor-pointer w-full\",\n            children: [String.fromCharCode(65 + index), \". \", option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleInputChange,\n        disabled: timeUp || submitted,\n        placeholder: \"Enter your answer\",\n        className: `w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400 ${submitted ? isCorrect ? \"bg-green-500 text-white\" : \"bg-red-500 text-white\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveAnswer,\n      disabled: !selectedOption && userInput === \"\" || timeUp || submitted,\n      className: `mt-4 px-6 py-2 font-semibold rounded-lg shadow-md transition \n          ${selectedOption || userInput !== \"\" ? \"bg-blue-500 text-white hover:bg-blue-600\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}\n        `,\n      children: \"Save and Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), timeUp && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 font-bold mt-4\",\n      children: \"Time's up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"f33T7iq1wftmljgBv/yww7H5bfQ=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Question","question","selectedAnswer","questionIndex","onAnswer","timeUp","_s","userInput","setUserInput","selectedOption","setSelectedOption","submitted","setSubmitted","isCorrect","setIsCorrect","handleInputChange","e","target","value","handleOptionSelect","option","handleSaveAnswer","console","log","Date","toLocaleTimeString","isAnswerCorrect","options","correctAnswer","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","bgColor","onClick","type","id","name","checked","readOnly","htmlFor","String","fromCharCode","onChange","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/2000a/Documents/Internship/quiz-platform/src/components/Question.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Question = ({ question, selectedAnswer, questionIndex, onAnswer, timeUp }) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(null); // Track correctness\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    if (!submitted) {\r\n      setSelectedOption(option);\r\n    }\r\n  };\r\n\r\n  const handleSaveAnswer = () => {\r\n    console.log(\"handleSaveAnswer called at:\", new Date().toLocaleTimeString());\r\n    if (submitted) return; // Prevent multiple calls\r\n  \r\n    if (!selectedOption && userInput === \"\") return;\r\n  \r\n    const isAnswerCorrect = question.options\r\n      ? selectedOption === question.correctAnswer\r\n      : userInput === question.correctAnswer;\r\n  \r\n    setIsCorrect(isAnswerCorrect);\r\n    setSubmitted(true);\r\n  \r\n    setTimeout(() => {\r\n      onAnswer(question.options ? selectedOption : userInput);\r\n      setUserInput(\"\");\r\n      setSelectedOption(null);\r\n      setSubmitted(false);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"bg-white shadow-lg rounded-lg p-6 max-w-xl mx-auto w-full mt-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"text-xl font-semibold text-gray-800\">{question.question}</h3>\r\n      </div>\r\n\r\n      {question.options ? (\r\n        <ul className=\"space-y-4\">\r\n          {question.options.map((option, index) => {\r\n            let bgColor = \"bg-gray-100 hover:bg-gray-200 border border-gray-300\";\r\n            if (submitted && selectedOption === option) {\r\n              bgColor = isCorrect ? \"bg-green-500 text-white border-green-700\" : \"bg-red-500 text-white border-red-700\";\r\n            } else if (selectedOption === option) {\r\n              bgColor = \"bg-blue-100 border-blue-500 shadow-md\";\r\n            }\r\n\r\n            return (\r\n              <li\r\n                key={index}\r\n                className={`flex items-center p-3 rounded-lg shadow-sm transition cursor-pointer border-2 ${bgColor}`}\r\n                onClick={() => handleOptionSelect(option)}\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`option-${index}`}\r\n                  name=\"answer\"\r\n                  value={option}\r\n                  checked={selectedOption === option}\r\n                  className=\"mr-3 w-5 h-5 hidden\"\r\n                  readOnly\r\n                />\r\n                <label htmlFor={`option-${index}`} className=\"text-gray-700 font-medium cursor-pointer w-full\">\r\n                  {String.fromCharCode(65 + index)}. {option}\r\n                </label>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"flex flex-col gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userInput}\r\n            onChange={handleInputChange}\r\n            disabled={timeUp || submitted}\r\n            placeholder=\"Enter your answer\"\r\n            className={`w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400 ${\r\n              submitted ? (isCorrect ? \"bg-green-500 text-white\" : \"bg-red-500 text-white\") : \"\"\r\n            }`}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Save and Next Button */}\r\n      <button\r\n        onClick={handleSaveAnswer}\r\n        disabled={(!selectedOption && userInput === \"\") || timeUp || submitted}\r\n        className={`mt-4 px-6 py-2 font-semibold rounded-lg shadow-md transition \r\n          ${selectedOption || userInput !== \"\" ? \"bg-blue-500 text-white hover:bg-blue-600\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}\r\n        `}\r\n      >\r\n        Save and Next\r\n      </button>\r\n\r\n      {timeUp && <p className=\"text-red-600 font-bold mt-4\">Time's up!</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,cAAc;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElD,MAAMkB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BR,YAAY,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,MAAM,IAAK;IACrC,IAAI,CAACT,SAAS,EAAE;MACdD,iBAAiB,CAACU,MAAM,CAAC;IAC3B;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC3E,IAAId,SAAS,EAAE,OAAO,CAAC;;IAEvB,IAAI,CAACF,cAAc,IAAIF,SAAS,KAAK,EAAE,EAAE;IAEzC,MAAMmB,eAAe,GAAGzB,QAAQ,CAAC0B,OAAO,GACpClB,cAAc,KAAKR,QAAQ,CAAC2B,aAAa,GACzCrB,SAAS,KAAKN,QAAQ,CAAC2B,aAAa;IAExCd,YAAY,CAACY,eAAe,CAAC;IAC7Bd,YAAY,CAAC,IAAI,CAAC;IAElBiB,UAAU,CAAC,MAAM;MACfzB,QAAQ,CAACH,QAAQ,CAAC0B,OAAO,GAAGlB,cAAc,GAAGF,SAAS,CAAC;MACvDC,YAAY,CAAC,EAAE,CAAC;MAChBE,iBAAiB,CAAC,IAAI,CAAC;MACvBE,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAGD,oBACEf,OAAA;IAAK+B,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAC7EhC,OAAA;MAAK+B,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDhC,OAAA;QAAI+B,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAE9B,QAAQ,CAACA;MAAQ;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,EAELlC,QAAQ,CAAC0B,OAAO,gBACf5B,OAAA;MAAI+B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtB9B,QAAQ,CAAC0B,OAAO,CAACS,GAAG,CAAC,CAAChB,MAAM,EAAEiB,KAAK,KAAK;QACvC,IAAIC,OAAO,GAAG,sDAAsD;QACpE,IAAI3B,SAAS,IAAIF,cAAc,KAAKW,MAAM,EAAE;UAC1CkB,OAAO,GAAGzB,SAAS,GAAG,0CAA0C,GAAG,sCAAsC;QAC3G,CAAC,MAAM,IAAIJ,cAAc,KAAKW,MAAM,EAAE;UACpCkB,OAAO,GAAG,uCAAuC;QACnD;QAEA,oBACEvC,OAAA;UAEE+B,SAAS,EAAE,iFAAiFQ,OAAO,EAAG;UACtGC,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACC,MAAM,CAAE;UAAAW,QAAA,gBAE1ChC,OAAA;YACEyC,IAAI,EAAC,OAAO;YACZC,EAAE,EAAE,UAAUJ,KAAK,EAAG;YACtBK,IAAI,EAAC,QAAQ;YACbxB,KAAK,EAAEE,MAAO;YACduB,OAAO,EAAElC,cAAc,KAAKW,MAAO;YACnCU,SAAS,EAAC,qBAAqB;YAC/Bc,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFpC,OAAA;YAAO8C,OAAO,EAAE,UAAUR,KAAK,EAAG;YAACP,SAAS,EAAC,iDAAiD;YAAAC,QAAA,GAC3Fe,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGV,KAAK,CAAC,EAAC,IAAE,EAACjB,MAAM;UAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA,GAfHE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBR,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpC,OAAA;MAAK+B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClChC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXtB,KAAK,EAAEX,SAAU;QACjByC,QAAQ,EAAEjC,iBAAkB;QAC5BkC,QAAQ,EAAE5C,MAAM,IAAIM,SAAU;QAC9BuC,WAAW,EAAC,mBAAmB;QAC/BpB,SAAS,EAAE,0FACTnB,SAAS,GAAIE,SAAS,GAAG,yBAAyB,GAAG,uBAAuB,GAAI,EAAE;MACjF;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDpC,OAAA;MACEwC,OAAO,EAAElB,gBAAiB;MAC1B4B,QAAQ,EAAG,CAACxC,cAAc,IAAIF,SAAS,KAAK,EAAE,IAAKF,MAAM,IAAIM,SAAU;MACvEmB,SAAS,EAAE;AACnB,YAAYrB,cAAc,IAAIF,SAAS,KAAK,EAAE,GAAG,0CAA0C,GAAG,8CAA8C;AAC5I,SAAU;MAAAwB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAER9B,MAAM,iBAAIN,OAAA;MAAG+B,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA1GIN,QAAQ;AAAAmD,EAAA,GAARnD,QAAQ;AA4Gd,eAAeA,QAAQ;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}