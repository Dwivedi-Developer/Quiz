{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{CircularProgressbar,buildStyles}from\"react-circular-progressbar\";import\"react-circular-progressbar/dist/styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const Timer=_ref=>{let{timeLimit,onTimeUp,resetTrigger}=_ref;const[timeLeft,setTimeLeft]=useState(timeLimit);useEffect(()=>{setTimeLeft(timeLimit);// Reset timer on question change\n},[resetTrigger,timeLimit]);useEffect(()=>{if(timeLeft>0){const timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}else if(timeLeft===0){onTimeUp&&onTimeUp();}},[timeLeft]);const percentage=timeLeft/timeLimit*100;return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center w-24 h-24\",children:/*#__PURE__*/_jsx(CircularProgressbar,{value:percentage,text:`${timeLeft}s`,styles:buildStyles({textSize:\"16px\",pathColor:`#3b82f6`,textColor:\"#1e3a8a\",trailColor:\"#dbeafe\"})})});};export default Timer;","map":{"version":3,"names":["React","useEffect","useState","CircularProgressbar","buildStyles","jsx","_jsx","Timer","_ref","timeLimit","onTimeUp","resetTrigger","timeLeft","setTimeLeft","timer","setTimeout","clearTimeout","percentage","className","children","value","text","styles","textSize","pathColor","textColor","trailColor"],"sources":["C:/Users/2000a/Documents/Internship/quiz-platform/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst Timer = ({ timeLimit, onTimeUp, resetTrigger }) => {\r\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\r\n\r\n  useEffect(() => {\r\n    setTimeLeft(timeLimit); // Reset timer on question change\r\n  }, [resetTrigger, timeLimit]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0) {\r\n      \r\n      onTimeUp && onTimeUp();\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const percentage = (timeLeft / timeLimit) * 100;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center w-24 h-24\">\r\n      <CircularProgressbar\r\n        value={percentage}\r\n        text={`${timeLeft}s`}\r\n        styles={buildStyles({\r\n          textSize: \"16px\",\r\n          pathColor: `#3b82f6`,\r\n          textColor: \"#1e3a8a\",\r\n          trailColor: \"#dbeafe\",\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,mBAAmB,CAAEC,WAAW,KAAQ,4BAA4B,CAC7E,MAAO,4CAA4C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAH,IAAA,CAClD,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAACO,SAAS,CAAC,CAEnDR,SAAS,CAAC,IAAM,CACdY,WAAW,CAACJ,SAAS,CAAC,CAAE;AAC1B,CAAC,CAAE,CAACE,YAAY,CAAEF,SAAS,CAAC,CAAC,CAE7BR,SAAS,CAAC,IAAM,CACd,GAAIW,QAAQ,CAAG,CAAC,CAAE,CAChB,KAAM,CAAAE,KAAK,CAAGC,UAAU,CAAC,IAAMF,WAAW,CAACD,QAAQ,CAAG,CAAC,CAAC,CAAE,IAAI,CAAC,CAC/D,MAAO,IAAMI,YAAY,CAACF,KAAK,CAAC,CAClC,CAAC,IAAM,IAAIF,QAAQ,GAAK,CAAC,CAAE,CAEzBF,QAAQ,EAAIA,QAAQ,CAAC,CAAC,CACxB,CACF,CAAC,CAAE,CAACE,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAK,UAAU,CAAIL,QAAQ,CAAGH,SAAS,CAAI,GAAG,CAE/C,mBACEH,IAAA,QAAKY,SAAS,CAAC,qDAAqD,CAAAC,QAAA,cAClEb,IAAA,CAACH,mBAAmB,EAClBiB,KAAK,CAAEH,UAAW,CAClBI,IAAI,CAAE,GAAGT,QAAQ,GAAI,CACrBU,MAAM,CAAElB,WAAW,CAAC,CAClBmB,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,SAAS,CACpBC,SAAS,CAAE,SAAS,CACpBC,UAAU,CAAE,SACd,CAAC,CAAE,CACJ,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}