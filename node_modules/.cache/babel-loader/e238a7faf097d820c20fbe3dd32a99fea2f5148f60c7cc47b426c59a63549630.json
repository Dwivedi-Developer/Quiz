{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Scoreboard=_ref=>{let{score,totalQuestions,onRetry}=_ref;const[history,setHistory]=useState([]);useEffect(()=>{saveScore(score,totalQuestions);loadScoreHistory();},[]);const saveScore=async(score,total)=>{if(!(\"indexedDB\"in window))return;const request=indexedDB.open(\"QuizDB\",1);request.onupgradeneeded=event=>{let db=event.target.result;if(!db.objectStoreNames.contains(\"scores\")){db.createObjectStore(\"scores\",{keyPath:\"id\",autoIncrement:true});}};request.onsuccess=event=>{let db=event.target.result;let transaction=db.transaction(\"scores\",\"readwrite\");let store=transaction.objectStore(\"scores\");store.add({score,total,date:new Date().toLocaleString()});};};const loadScoreHistory=()=>{if(!(\"indexedDB\"in window))return;const request=indexedDB.open(\"QuizDB\",1);request.onsuccess=event=>{let db=event.target.result;let transaction=db.transaction(\"scores\",\"readonly\");let store=transaction.objectStore(\"scores\");let getAll=store.getAll();getAll.onsuccess=()=>{setHistory(getAll.result.reverse());// Show latest first\n};};};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-gray-800\",children:\"Quiz Completed!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-semibold text-gray-700 mt-4\",children:[\"Your Score: \",score,\" / \",totalQuestions]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center gap-2 mt-6\",children:Array.from({length:totalQuestions}).map((_,index)=>/*#__PURE__*/_jsx(\"div\",{className:`w-10 h-10 flex items-center justify-center rounded-full text-white font-bold text-sm shadow-md ${index<score?\"bg-green-500\":\"bg-red-500\"}`,children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-4 mt-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600 font-bold\",children:\"\\u2714 Correct\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-600 font-bold\",children:\"\\u2716 Incorrect\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onRetry,className:\"mt-6 px-6 py-3 text-lg font-semibold text-white bg-blue-500 hover:bg-blue-600 rounded-lg shadow-md focus:outline-none focus:ring-4 focus:ring-blue-300\",children:\"Reattempt Quiz\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-10 w-full max-w-lg bg-white shadow-lg rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-semibold text-gray-800 mb-4\",children:\"Score History\"}),history.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-4\",children:history.map((entry,index)=>/*#__PURE__*/_jsxs(\"li\",{className:`p-4 rounded-lg shadow-md border-l-8 transition duration-300 ease-in-out transform hover:scale-105 ${entry.score>=entry.totalQuestions/2?\"border-green-500 bg-green-50\":\"border-red-500 bg-red-50\"}`,children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-semibold text-gray-800\",children:[\"Attempt \",history.length-index]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Date: \",entry.date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-medium mt-1\",children:[\"Score: \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-bold text-gray-900\",children:[entry.score,\" / \",entry.total]})]})]},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No quiz history available.\"})]})]});};export default Scoreboard;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Scoreboard","_ref","score","totalQuestions","onRetry","history","setHistory","saveScore","loadScoreHistory","total","window","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onsuccess","transaction","store","objectStore","add","date","Date","toLocaleString","getAll","reverse","className","children","Array","from","length","map","_","index","onClick","entry"],"sources":["C:/Users/2000a/Documents/Internship/quiz-platform/src/components/Scoreboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Scoreboard = ({ score, totalQuestions, onRetry }) => {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    saveScore(score, totalQuestions);\r\n    loadScoreHistory();\r\n  }, []);\r\n\r\n  const saveScore = async (score, total) => {\r\n    if (!(\"indexedDB\" in window)) return;\r\n\r\n    const request = indexedDB.open(\"QuizDB\", 1);\r\n    request.onupgradeneeded = (event) => {\r\n      let db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"scores\")) {\r\n        db.createObjectStore(\"scores\", { keyPath: \"id\", autoIncrement: true });\r\n      }\r\n    };\r\n\r\n    request.onsuccess = (event) => {\r\n      let db = event.target.result;\r\n      let transaction = db.transaction(\"scores\", \"readwrite\");\r\n      let store = transaction.objectStore(\"scores\");\r\n      store.add({ score, total, date: new Date().toLocaleString() });\r\n    };\r\n  };\r\n\r\n  const loadScoreHistory = () => {\r\n    if (!(\"indexedDB\" in window)) return;\r\n\r\n    const request = indexedDB.open(\"QuizDB\", 1);\r\n    request.onsuccess = (event) => {\r\n      let db = event.target.result;\r\n      let transaction = db.transaction(\"scores\", \"readonly\");\r\n      let store = transaction.objectStore(\"scores\");\r\n      let getAll = store.getAll();\r\n\r\n      getAll.onsuccess = () => {\r\n        setHistory(getAll.result.reverse()); // Show latest first\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6 text-center\">\r\n      <h2 className=\"text-3xl font-bold text-gray-800\">Quiz Completed!</h2>\r\n      <p className=\"text-xl font-semibold text-gray-700 mt-4\">\r\n        Your Score: {score} / {totalQuestions}\r\n      </p>\r\n      <div className=\"flex flex-wrap justify-center gap-2 mt-6\">\r\n        {Array.from({ length: totalQuestions }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className={`w-10 h-10 flex items-center justify-center rounded-full text-white font-bold text-sm shadow-md ${\r\n              index < score ? \"bg-green-500\" : \"bg-red-500\"\r\n            }`}\r\n          >\r\n            {index + 1}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex items-center justify-center gap-4 mt-4\">\r\n        <span className=\"text-green-600 font-bold\">✔ Correct</span>\r\n        <span className=\"text-red-600 font-bold\">✖ Incorrect</span>\r\n      </div>\r\n\r\n      <button\r\n        onClick={onRetry}\r\n        className=\"mt-6 px-6 py-3 text-lg font-semibold text-white bg-blue-500 hover:bg-blue-600 rounded-lg shadow-md focus:outline-none focus:ring-4 focus:ring-blue-300\"\r\n      >\r\n        Reattempt Quiz\r\n      </button>\r\n\r\n      {/* Score History Section */}\r\n      <div className=\"mt-10 w-full max-w-lg bg-white shadow-lg rounded-lg p-6\">\r\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-4\">Score History</h3>\r\n        {history.length > 0 ? (\r\n          <ul className=\"space-y-4\">\r\n            {history.map((entry, index) => (\r\n              <li\r\n              key={index}\r\n              className={`p-4 rounded-lg shadow-md border-l-8 transition duration-300 ease-in-out transform hover:scale-105 ${\r\n                entry.score >= entry.totalQuestions / 2 ? \"border-green-500 bg-green-50\" : \"border-red-500 bg-red-50\"\r\n              }`}\r\n            >\r\n              <p className=\"text-lg font-semibold text-gray-800\">Attempt {history.length - index}</p>\r\n              <p className=\"text-sm text-gray-600\">Date: {entry.date}</p>\r\n              <p className=\"text-lg font-medium mt-1\">\r\n                Score: <span className=\"font-bold text-gray-900\">{entry.score} / {entry.total}</span>\r\n              </p>\r\n            </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className=\"text-gray-500\">No quiz history available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}