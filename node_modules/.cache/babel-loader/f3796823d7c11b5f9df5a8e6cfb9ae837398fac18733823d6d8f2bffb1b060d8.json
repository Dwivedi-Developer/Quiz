{"ast":null,"code":"import React,{useState}from\"react\";import Question from\"./Question\";import Timer from\"./Timer\";import Scoreboard from\"./Scoreboard\";import quizData from\"../data/quizData\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Quiz=()=>{const[currentTypeIndex,setCurrentTypeIndex]=useState(0);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[score,setScore]=useState(0);const[showScore,setShowScore]=useState(false);const[resetTrigger,setResetTrigger]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);// Track selected option\nconst currentType=quizData[currentTypeIndex];const currentQuestion=currentType.questions[currentQuestionIndex];const handleNextQuestion=()=>{if(currentQuestionIndex<currentType.questions.length-1){setCurrentQuestionIndex(prevIndex=>prevIndex+1);}else if(currentTypeIndex<quizData.length-1){setCurrentTypeIndex(prevIndex=>prevIndex+1);setCurrentQuestionIndex(0);}else{setShowScore(true);}setSelectedAnswer(null);// Reset the selected answer for the next question\nsetResetTrigger(prev=>prev+1);// Reset timer\n};const handleAnswer=selectedAnswer=>{setSelectedAnswer(selectedAnswer);// Store selected answer in state\nif(selectedAnswer===currentQuestion.correctAnswer){setScore(prevScore=>prevScore+1);}setTimeout(()=>{handleNextQuestion();},300);// Small delay for UI smoothness\n};const handleFinishQuiz=()=>{if(window.confirm(\"Do you want to finish your quiz?\")){setShowScore(true);}};const handleRetry=()=>{setCurrentTypeIndex(0);setCurrentQuestionIndex(0);setScore(0);setShowScore(false);setResetTrigger(0);setSelectedAnswer(null);};return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\",children:showScore?/*#__PURE__*/_jsx(Scoreboard,{score:score,totalQuestions:quizData.flatMap(type=>type.questions).length,onRetry:handleRetry}):/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-2xl bg-white shadow-lg rounded-lg p-6 relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleFinishQuiz,className:\"absolute top-4 right-4 px-4 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-600 transition\",children:\"Finish\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-center text-gray-800 mb-4\",children:currentType.type}),/*#__PURE__*/_jsx(Timer,{timeLimit:30,onTimeUp:handleNextQuestion,resetTrigger:resetTrigger}),/*#__PURE__*/_jsx(Question,{question:currentQuestion,onAnswer:handleAnswer,selectedAnswer:selectedAnswer// Pass selected answer state\n})]})});};export default Quiz;","map":{"version":3,"names":["React","useState","Question","Timer","Scoreboard","quizData","jsx","_jsx","jsxs","_jsxs","Quiz","currentTypeIndex","setCurrentTypeIndex","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","resetTrigger","setResetTrigger","selectedAnswer","setSelectedAnswer","currentType","currentQuestion","questions","handleNextQuestion","length","prevIndex","prev","handleAnswer","correctAnswer","prevScore","setTimeout","handleFinishQuiz","window","confirm","handleRetry","className","children","totalQuestions","flatMap","type","onRetry","onClick","timeLimit","onTimeUp","question","onAnswer"],"sources":["C:/Users/2000a/Documents/Internship/quiz-platform/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Question from \"./Question\";\r\nimport Timer from \"./Timer\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport quizData from \"../data/quizData\";\r\n\r\nconst Quiz = () => {\r\n  const [currentTypeIndex, setCurrentTypeIndex] = useState(0);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [resetTrigger, setResetTrigger] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null); // Track selected option\r\n\r\n  const currentType = quizData[currentTypeIndex];\r\n  const currentQuestion = currentType.questions[currentQuestionIndex];\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < currentType.questions.length - 1) {\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n    } else if (currentTypeIndex < quizData.length - 1) {\r\n      setCurrentTypeIndex((prevIndex) => prevIndex + 1);\r\n      setCurrentQuestionIndex(0);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n    setSelectedAnswer(null); // Reset the selected answer for the next question\r\n    setResetTrigger((prev) => prev + 1); // Reset timer\r\n  };\r\n\r\n  const handleAnswer = (selectedAnswer) => {\r\n    setSelectedAnswer(selectedAnswer); // Store selected answer in state\r\n\r\n    if (selectedAnswer === currentQuestion.correctAnswer) {\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      handleNextQuestion();\r\n    }, 300); // Small delay for UI smoothness\r\n  };\r\n\r\n  const handleFinishQuiz = () => {\r\n    if (window.confirm(\"Do you want to finish your quiz?\")) {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentTypeIndex(0);\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n    setResetTrigger(0);\r\n    setSelectedAnswer(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n      {showScore ? (\r\n        <Scoreboard\r\n          score={score}\r\n          totalQuestions={quizData.flatMap((type) => type.questions).length}\r\n          onRetry={handleRetry}\r\n        />\r\n      ) : (\r\n        <div className=\"w-full max-w-2xl bg-white shadow-lg rounded-lg p-6 relative\">\r\n          <button\r\n            onClick={handleFinishQuiz}\r\n            className=\"absolute top-4 right-4 px-4 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-600 transition\"\r\n          >\r\n            Finish\r\n          </button>\r\n          <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-4\">{currentType.type}</h2>\r\n          <Timer timeLimit={30} onTimeUp={handleNextQuestion} resetTrigger={resetTrigger} />\r\n          <Question\r\n            question={currentQuestion}\r\n            onAnswer={handleAnswer}\r\n            selectedAnswer={selectedAnswer} // Pass selected answer state\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}